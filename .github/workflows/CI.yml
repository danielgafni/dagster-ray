name: CI

on:
  workflow_dispatch:
  push:
  release:
      types:
        - created
      # Sequence of patterns matched against refs/tags
      tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  UV_SYSTEM_PYTHON: "1"

jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        py:
          # - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.4.18
          enable-cache: true
      - name: Set up Python ${{ matrix.py }}
        run: uv python install ${{ matrix.py }}
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - uses: azure/setup-helm@v4.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          start: false
          driver: docker
      - name: Run tests
        env:
          PYTEST_KUBERAY_VERSIONS: "1.0.0,1.1.0"  # will run tests for all these KubeRay versions
        run: uv run pytest -v .

  lint:
    name: lint ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        py:
#          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.4.18
          enable-cache: true
      - name: Set up Python ${{ matrix.py }}
        run: uv python install ${{ matrix.py }}
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files

  qa_success:
    name: QA Success
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "QA Succeeded!"

  publish:
    needs: qa_success
    if: contains(github.ref, 'refs/tags/')
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.3.4
          enable-cache: true
      - name: Set up Python ${{ matrix.py }}
        run: uv python install
      - name: Generate Version
        run: uv run hatch version $(dunamai from any --style pep440)
      - name: Publish to PyPI
        run: uv publish
