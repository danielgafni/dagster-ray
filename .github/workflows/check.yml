name: QA & Tests
on:
  push:

jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        py:
#          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
#          - "3.8"
    steps:
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - uses: actions/checkout@v4
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - uses: azure/setup-helm@v4.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          start: false
          driver: docker
      - name: Install dependencies
        run: poetry install --all-extras --sync
      - name: Run tests
        env:
          PYTEST_KUBERAY_VERSIONS: "1.0.0,1.1.0"  # will run tests for all these KubeRay versions
        run: pytest -v .

  lint:
    name: lint ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        py:
#          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
#          - "3.8"
    steps:
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - uses: actions/checkout@v2
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --all-extras --sync
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
