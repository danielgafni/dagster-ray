
[project]
name = "dagster-ray"
description = "Dagster integration library for Ray"
authors = [
    {name = "Daniel Gafni", email = "danielgafni16@gmail.com"},
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10,<3.13"
readme = "README.md"
keywords = [
    "dagster",
    "ray",
    "ETL",
    "distributed",
]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "dagster>=1.10.0",
    "eval-type-backport>=0.2.2 ; python_full_version < '3.10'",
    "tenacity>=8.0.0",
]

dynamic = ["version"]

[project.urls]
GitHub = "https://github.com/danielgafni/dagster-ray"
Documentation = "https://danielgafni.github.io/dagster-ray/"
Changelog = "https://github.com/danielgafni/dagster-ray/blob/main/CHANGELOG.md"

[project.optional-dependencies]
run_launcher = [
    "ray[client]"
]
executor = [
    "ray[client]"
]
pipes = [
    "ray[client]"
]
kuberay = [
    "pyyaml",
    "kubernetes>=20.0.0",
    "dagster-k8s>=0.19.0",
    "pyyaml>=4.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "basedpyright>=1.28.1",
    "hypothesis<7.0.0,>=6.77.0",
    "pytest<8.0.0,>=7.3.1",
    "ruff>=0.3.0,<1.0.0",
    "pre-commit>=4.3.0,<4.4.0",
    "pytest-cases<4.0.0,>=3.6.14",
    "pytest-kubernetes<1.0.0,>=0.3.1",
    "blacken-docs<2.0.0,>=1.16.0",
    "ray[default,data]>=2.7.0",
    "hatch>=1.12.0",
    "dunamai>=1.22.0",
    "pip>=24.2",
    "ipython>=8.12.3",
    "syrupy>=4.9.1",
    "pytest-env>=1.1.3",
    "dagster-webserver>=1.10.2",
]
docs = [
    "griffe>=1.14.0",
    "griffe-inherited-docstrings>=1.1.2",
    "griffe-pydantic>=1.1.7",
    "mike>=2.1.3",
    "mkdocs>=1.6.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-github-admonitions-plugin>=0.1.1",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.20",
    "mkdocs-section-index>=0.3.10",
    "mkdocstrings[python]>=0.30.0",
    "pygments>=2.19.1",
]


[tool.hatch.build.targets.wheel]
packages = ["src/dagster_ray"]

[tool.hatch.version]
path = "src/dagster_ray/_version.py"

[tool.pytest.ini_options]
addopts = "-vvv --capture=no --log-disable=faker"
log_cli = true
log_level = "INFO"

[tool.ruff]
target-version = "py310"
line-length = 120
src = [
    "src",
    "tests"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
[tool.ruff.lint]
extend-select = ["I", "TID252", "TID253", "UP", "FA100", "FA102", "PYI044", "F404"]
ignore = [
    "FA100",  # from __future__ import annotations breaks pydantic
    "FA102" # from __future__ import annotations breaks pydantic
]

[tool.ruff.lint.isort]
known-first-party = ["dagster_ray", "tests", "mkdocs_dagster_ray"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
banned-module-level-imports = ["ray", "kubernetes", "torch"]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "standard"
failOnWarnings = false
reportPropertyTypeMismatch = true
reportImportCycles = true
reportWildcardImportFromLibrary = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportAny = false
reportExplicitAny = false
reportUnusedCallResult = false
reportAttributeAccessIssue = "error"
reportGeneralTypeIssues = "error"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportUnknownParameterType = "none"
reportUnknownLambdaType = "none"
reportMissingTypeStubs = false
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportOverlappingOverload = true
# reportPrivateUsage = "warning"

include = [
    "src",
    "tests"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.pytest_env]
RAY_ENABLE_UV_RUN_RUNTIME_ENV = "0"

[tool.uv.sources]
griffe-pydantic = { git = "https://github.com/danielgafni/griffe-pydantic.git", branch = "feat/configurable-bases" }
