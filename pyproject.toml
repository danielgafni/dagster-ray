[tool.poetry]
name = "dagster-ray"
version = "0.0.0"
description = "Dagster integration library for Ray"
authors = [
    "Daniel Gafni <danielgafni16@gmail.com>"
]
readme = "README.md"
packages = [{include = "dagster_ray"}]
repository = "https://github.com/danielgafni/dagster-ray"
keywords = [
    "dagster",
    "ray",
    "ETL",
    "distributed",
]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.8.1,<3.13"
dagster = ">=1.8.0"
tenacity = ">=8.0.0"
greenlet = [
    {version = "*", python = "<3.12"},
    {version = ">=3.0", python = ">=3.12"}
]

kubernetes = { version = ">=20.0.0", optional = true  }
dagster-k8s = { version = ">=0.19.0", optional = true  }

[tool.poetry.extras]
kuberay = [
    "kubernetes",
    "dagster-k8s",
]

[tool.poetry.group.dev.dependencies]
hypothesis = "^6.77.0"
pytest = "^7.3.1"
ruff = "^0.3.0"
pyright = "^1.1.313"
pre-commit = "^3.3.2"
dagit = "^1.3.9"
pytest-cases = "^3.6.14"
pytest-kubernetes = "^0.3.1"
blacken-docs = "^1.16.0"
ray = { version = ">=2.7.0", extras = ["all"] }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
strict = false
vcs = "git"
style = "pep440"
dirty = true

[tool.poetry-dynamic-versioning.substitution]
files = [
    "pyproject.toml",
    "dagster_ray/_version.py"
]

[tool.pytest.ini_options]
addopts = "-vvv --capture=no --log-disable=faker"
log_cli = true
log_level = "INFO"

[tool.ruff]
line-length = 120
src = [
    "dagster_ray",
    "tests"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
[tool.ruff.lint]
extend-select = ["I", "TID252", "TID253"]
[tool.ruff.lint.isort]
known-first-party = ["dagster_ray", "tests"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
banned-module-level-imports = ["ray"]

[tool.pyright]
reportPropertyTypeMismatch = true
reportImportCycles = true
reportWildcardImportFromLibrary = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true

include = [
    "dagster_ray",
    "tests"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
